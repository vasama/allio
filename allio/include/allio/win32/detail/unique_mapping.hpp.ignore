#pragma once

#include <vsm/assert.h>
#include <vsm/result.hpp>
#include <vsm/standard.hpp>
#include <vsm/unique_resource.hpp>

#include <allio/linux/detail/undef.i>

namespace vsm::linux::detail {

vsm::result<void> close_mapping(void* base) noexcept;

struct mapping_deleter
{
	void vsm_static_operator_invoke(void* const base) noexcept
	{
		vsm_verify(close_mapping(base));
	}
};
using unique_mapping = vsm::unique_resource<void*, mapping_deleter, nullptr>;

} // namespace vsm::linux::detail

#include <allio/linux/detail/undef.i>
